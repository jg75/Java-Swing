package examples.sumofmultiples;

import java.math.BigInteger;
import java.util.Set;

/**
 *
 * @author jgarner1
 */
public class SumOfMultiplesGUI extends javax.swing.JFrame {
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sumTextFieldPane = new javax.swing.JLayeredPane();
        sumScrollPane = new javax.swing.JScrollPane();
        sumTextArea = new javax.swing.JTextArea();
        factorsPane = new javax.swing.JLayeredPane();
        factorsScrollPane = new javax.swing.JScrollPane();
        factorList = new javax.swing.JList<>();
        removeButton = new javax.swing.JButton();
        factorSpinner = new javax.swing.JSpinner();
        addButton = new javax.swing.JButton();
        rangePane = new javax.swing.JLayeredPane();
        rangeSpinner = new javax.swing.JSpinner();
        inclusiveCheckBox = new javax.swing.JCheckBox();
        resetPane = new javax.swing.JLayeredPane();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The Sum of Multiples in a Series");
        setResizable(false);

        sumTextFieldPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sum", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N

        sumScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        sumTextArea.setColumns(1);
        sumTextArea.setFont(new java.awt.Font("Monospaced", 0, 36)); // NOI18N
        sumTextArea.setRows(1);
        sumTextArea.setText("0");
        sumScrollPane.setViewportView(sumTextArea);

        sumTextFieldPane.setLayer(sumScrollPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout sumTextFieldPaneLayout = new javax.swing.GroupLayout(sumTextFieldPane);
        sumTextFieldPane.setLayout(sumTextFieldPaneLayout);
        sumTextFieldPaneLayout.setHorizontalGroup(
            sumTextFieldPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sumTextFieldPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sumScrollPane)
                .addContainerGap())
        );
        sumTextFieldPaneLayout.setVerticalGroup(
            sumTextFieldPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sumTextFieldPaneLayout.createSequentialGroup()
                .addComponent(sumScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        factorsPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Multiples", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N

        factorList.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        factorList.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        factorList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        factorList.setToolTipText("Select a number and click the Remove button to remove it from the list");
        factorsScrollPane.setViewportView(factorList);

        removeButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        removeButton.setText("Remove");
        removeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        factorSpinner.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        factorSpinner.setModel(new javax.swing.SpinnerNumberModel(1L, 1L, null, 1L));
        factorSpinner.setToolTipText("Select a number and click the Add button to add it to the list");
        factorSpinner.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        addButton.setText("Add");
        addButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        factorsPane.setLayer(factorsScrollPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        factorsPane.setLayer(removeButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        factorsPane.setLayer(factorSpinner, javax.swing.JLayeredPane.DEFAULT_LAYER);
        factorsPane.setLayer(addButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout factorsPaneLayout = new javax.swing.GroupLayout(factorsPane);
        factorsPane.setLayout(factorsPaneLayout);
        factorsPaneLayout.setHorizontalGroup(
            factorsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(factorSpinner)
            .addComponent(factorsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
            .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        factorsPaneLayout.setVerticalGroup(
            factorsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(factorsPaneLayout.createSequentialGroup()
                .addComponent(factorsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(factorSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton))
        );

        rangePane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Range", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N

        rangeSpinner.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        rangeSpinner.setModel(new javax.swing.SpinnerNumberModel(1L, 1L, null, 1L));
        rangeSpinner.setToolTipText("Select a range");
        rangeSpinner.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rangeSpinner.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rangeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rangeSpinnerStateChanged(evt);
            }
        });

        inclusiveCheckBox.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        inclusiveCheckBox.setText("Inclusive");
        inclusiveCheckBox.setToolTipText("Select for inclusive range");
        inclusiveCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inclusiveCheckBoxActionPerformed(evt);
            }
        });

        rangePane.setLayer(rangeSpinner, javax.swing.JLayeredPane.DEFAULT_LAYER);
        rangePane.setLayer(inclusiveCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout rangePaneLayout = new javax.swing.GroupLayout(rangePane);
        rangePane.setLayout(rangePaneLayout);
        rangePaneLayout.setHorizontalGroup(
            rangePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rangeSpinner)
            .addGroup(rangePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inclusiveCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );
        rangePaneLayout.setVerticalGroup(
            rangePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rangePaneLayout.createSequentialGroup()
                .addComponent(rangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inclusiveCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                .addContainerGap())
        );

        resetButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        resetButton.setLabel("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        resetPane.setLayer(resetButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout resetPaneLayout = new javax.swing.GroupLayout(resetPane);
        resetPane.setLayout(resetPaneLayout);
        resetPaneLayout.setHorizontalGroup(
            resetPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resetPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        resetPaneLayout.setVerticalGroup(
            resetPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resetPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sumTextFieldPane, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(factorsPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rangePane)
                            .addComponent(resetPane))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sumTextFieldPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(factorsPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rangePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetPane)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Event listener for the Remove {@code JButton} removes the selected item 
     * from the {@code JList} containing the list of factors and updates the
     * Sum {@code JTextField} with the updated value.
     * @param evt 
     */
    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        if (!factorList.isSelectionEmpty()) {
            String value = factorList.getSelectedValue().replace(",", "");
            BigInteger factor = BigInteger.valueOf(Long.parseLong(value));
            Set<BigInteger> factors = sumOfMultiples.getFactors();
            
            factors.remove(factor);
            sumOfMultiples.setFactors(factors);
            factorList.setModel(new NumberListModel(sumOfMultiples.getFactors()));
            sumTextArea.setText(sumOfMultiples.toString());
        }
    }//GEN-LAST:event_removeButtonActionPerformed
    
    /**
     * Event listener for the Add {@code JButton} adds the selected item to the
     * {@code JList} containing the list of factors and updates the 
     * Sum {@code JTextField} with the updated value.
     * @param evt 
     */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        BigInteger factor = BigInteger.valueOf((Long) factorSpinner.getValue());
        Set<BigInteger> factors = sumOfMultiples.getFactors();
        
        if (!factors.contains(factor)) {
            factors.add(factor);
            sumOfMultiples.setFactors(factors);
            factorList.setModel(new NumberListModel(sumOfMultiples.getFactors()));
            sumTextArea.setText(sumOfMultiples.toString());
        }
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * Event listener for the Range {@code JSpinner} updates the 
     * Sum {@code JTextField} with the updated value.
     * @param evt 
     */
    private void rangeSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rangeSpinnerStateChanged
        BigInteger range = BigInteger.valueOf((Long) rangeSpinner.getValue());
        
        sumOfMultiples.setRange(range);
        sumTextArea.setText(sumOfMultiples.toString());
    }//GEN-LAST:event_rangeSpinnerStateChanged

    /**
     * Event listener for the Inclusive {@code JTextBox} updates the
     * Sum {@code JTextField} with the updated value.
     * @param evt 
     */
    private void inclusiveCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inclusiveCheckBoxActionPerformed
        sumOfMultiples.setInclusive(inclusiveCheckBox.isSelected());
        sumTextArea.setText(sumOfMultiples.toString());
    }//GEN-LAST:event_inclusiveCheckBoxActionPerformed

    /**
     * Event listener for the Reset {@code JButton} resets the components to
     * their default state.
     * @param evt 
     */
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        sumOfMultiples = new SumOfMultiples();
        
        factorList.setModel(new NumberListModel(sumOfMultiples.getFactors()));
        factorSpinner.setValue(((javax.swing.SpinnerNumberModel) factorSpinner.getModel()).getMinimum());
        rangeSpinner.setValue(Long.valueOf(sumOfMultiples.getRange().toString()));
        
        if (inclusiveCheckBox.isSelected() != sumOfMultiples.isInclusive()) {
            inclusiveCheckBox.doClick();
        }
    }//GEN-LAST:event_resetButtonActionPerformed
    
    /**
     * Creates new form {@code SumOfMultiplesGUI}.
     */
    public SumOfMultiplesGUI() {
        sumOfMultiples = new SumOfMultiples();
        
        initComponents();
    }
    
    private SumOfMultiples sumOfMultiples;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JList<String> factorList;
    private javax.swing.JSpinner factorSpinner;
    private javax.swing.JLayeredPane factorsPane;
    private javax.swing.JScrollPane factorsScrollPane;
    private javax.swing.JCheckBox inclusiveCheckBox;
    private javax.swing.JLayeredPane rangePane;
    private javax.swing.JSpinner rangeSpinner;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JLayeredPane resetPane;
    private javax.swing.JScrollPane sumScrollPane;
    private javax.swing.JTextArea sumTextArea;
    private javax.swing.JLayeredPane sumTextFieldPane;
    // End of variables declaration//GEN-END:variables
}
